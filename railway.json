{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "healthcheckPath": "/health",
    "healthcheckTimeout": 120,
    "restartPolicyMaxRetries": 5,
    "restartPolicyType": "ON_FAILURE",
    "startCommand": "SERVICE_TYPE=backend poetry run python backend/main.py"
  },
  "environments": {
    "development": {
      "variables": {
        "DEBUG": "true",
        "ENVIRONMENT": "development",
        "SERVICE_TYPE": "backend"
      }
    },
    "production": {
      "variables": {
        "DEBUG": "false",
        "ENVIRONMENT": "production",
        "SERVICE_TYPE": "backend"
      }
    }
  },
  "plugins": {
    "postgres": {
      "type": "postgresql",
      "environmentMappings": {
        "DATABASE_URL": "DATABASE_URL"
      }
    }
  },
  "services": {
    "backend": {
      "build": {
        "builder": "NIXPACKS"
      },
      "deploy": {
        "healthcheckPath": "/health",
        "healthcheckTimeout": 120,
        "restartPolicyMaxRetries": 5,
        "restartPolicyType": "ON_FAILURE",
        "startCommand": "SERVICE_TYPE=backend poetry run python backend/main.py"
      },
      "variables": {
        "PYTHONPATH": "/app",
        "SERVICE_TYPE": "backend"
      }
    },
    "frontend": {
      "build": {
        "builder": "NIXPACKS"
      },
      "deploy": {
        "healthcheckPath": "/",
        "healthcheckTimeout": 60,
        "restartPolicyMaxRetries": 3,
        "restartPolicyType": "ON_FAILURE",
        "startCommand": "SERVICE_TYPE=frontend cd frontend && npm start"
      },
      "variables": {
        "SERVICE_TYPE": "frontend"
      }
    },
    "scraper": {
      "build": {
        "builder": "NIXPACKS"
      },
      "deploy": {
        "restartPolicyMaxRetries": 3,
        "restartPolicyType": "ON_FAILURE",
        "startCommand": "SERVICE_TYPE=scraper poetry run python -m permit_leads --daemon --interval 3600"
      },
      "variables": {
        "PYTHONPATH": "/app",
        "SERVICE_TYPE": "scraper"
      }
    }
  }
}
