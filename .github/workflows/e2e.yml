name: E2E Tests

on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'playwright.config.ts'
      - '.github/workflows/e2e.yml'
  workflow_dispatch:

jobs:
  e2e:
    name: E2E Testing
    runs-on: ubuntu-latest
    
    env:
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install Playwright with dependencies
        run: |
          npx playwright install --with-deps chromium

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend application
        run: |
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Start frontend application
        run: |
          cd frontend
          npm start &
          echo $! > ../frontend.pid
          
          # Wait for the server to be ready
          echo "Waiting for frontend to be available at http://localhost:3000..."
          for i in {1..30}; do
            if curl -f --silent --max-time 5 http://localhost:3000/ > /dev/null 2>&1; then
              echo "Frontend is ready!"
              break
            fi
            echo "Attempt $i/30: Frontend not ready yet, waiting 5 seconds..."
            sleep 5
          done
          
          if [ $i -eq 30 ]; then
            echo "Frontend failed to start after 150 seconds"
            exit 1
          fi

      - name: Run Playwright test suite
        run: npx playwright test
        env:
          BASE_URL: http://localhost:3000

      - name: Stop frontend application
        if: always()
        run: |
          if [ -f frontend.pid ]; then
            kill $(cat frontend.pid) || true
            rm frontend.pid
          fi

      - name: Upload Playwright test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.run_number }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30