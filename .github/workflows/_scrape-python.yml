name: _Scrape Python (Reusable)

on:
  workflow_call:
    inputs:
      name:
        description: "Scraper name/identifier (e.g., tx-harris)"
        required: true
        type: string
      module:
        description: "Python module to run (e.g., permit_leads.harris.scrape)"
        required: true
        type: string
      entry_fallback:
        description: "Fallback script path if module fails"
        required: false
        type: string
        default: ""
      days:
        description: "Days back to scrape"
        required: false
        type: string
        default: "1"
      sample_data:
        description: "Use sample data mode"
        required: false
        type: string
        default: "false"
      artifacts_glob:
        description: "Additional artifacts to upload (glob pattern)"
        required: false
        type: string
        default: ""
    secrets:
      SUPABASE_URL:
        required: true
      SUPABASE_SERVICE_ROLE_KEY:
        required: true
      SOURCE_URL:
        required: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SOURCE_URL: ${{ secrets.SOURCE_URL }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f permit_leads/requirements.txt ]; then pip install -r permit_leads/requirements.txt; fi

      - name: Ensure dirs
        run: mkdir -p logs artifacts data

      - name: Preflight secrets
        run: |
          for v in SUPABASE_URL SUPABASE_SERVICE_ROLE_KEY; do
            if [ -z "${!v}" ]; then echo "::error::$v missing"; exit 1; fi
          done

      - name: Run module
        id: run_module
        run: |
          EXIT_CODE=${PIPESTATUS[0]}
          echo "exit=$EXIT_CODE" >> $GITHUB_OUTPUT
          set -e

      - name: Fallback script
        if: steps.run_module.outputs.exit != '0'
        run: |
          # Check if entry_fallback is provided using shell logic
          if [ -n "${{ inputs.entry_fallback }}" ] && [ "${{ inputs.entry_fallback }}" != "" ]; then
            ARGS="--days ${{ inputs.days }}"
            [ "${{ inputs.sample_data }}" = "true" ] && ARGS="$ARGS --sample"
            python "${{ inputs.entry_fallback }}" $ARGS | tee -a logs/etl_output.log
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-etl-${{ github.run_id }}
          path: |
            artifacts/**/*.csv
            data/**/*.csv
            logs/**/*.log
            logs/etl_output.log
            ${{ inputs.artifacts_glob }}
          if-no-files-found: warn
          retention-days: 14