name: ETL (Cities)

on:
  workflow_dispatch:
    inputs:
      days:
        description: Lookback window (days)
        default: "14"
  schedule:
    - cron: "20 2 * * *"   # nightly 02:20

jobs:
  scrape:
    runs-on: [self-hosted, linux, x64, scrape]  # your runner labels
    strategy:
      fail-fast: false
      matrix:
        city: [houston_weekly, houston_sold, dallas, austin]  # add san_antonio later

    env:
      # Supabase (server-side)
      SUPABASE_URL:               ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY:  ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      # City/API secrets
      HOUSTON_WEEKLY_URL:         ${{ secrets.HOUSTON_WEEKLY_URL }}
      HOUSTON_SOLD_URL:           ${{ secrets.HOUSTON_SOLD_URL }}
      DALLAS_ARCGIS_URL:          ${{ secrets.DALLAS_ARCGIS_URL }}
      AUSTIN_SODA_APP_TOKEN:      ${{ secrets.AUSTIN_SODA_APP_TOKEN }}
      AUSTIN_DATASET_ID:          ${{ secrets.AUSTIN_DATASET_ID }}

      # Controls
      LOOKBACK_DAYS:              ${{ github.event.inputs.days || '14' }}
      PIP_CACHE_DIR:              ~/.cache/pip

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install ETL deps
        run: |
          python -m pip install --upgrade pip
          pip install -r permit_leads/requirements.txt

      - name: Sanity env
        shell: bash
        run: |
          set -Eeuo pipefail
          miss=0
          for v in SUPABASE_URL SUPABASE_SERVICE_ROLE_KEY; do [ -z "${!v:-}" ] && echo "MISSING $v" && miss=1; done
          case "${{ matrix.city }}" in
            dallas)       [ -z "${DALLAS_ARCGIS_URL:-}" ] && echo "MISSING DALLAS_ARCGIS_URL" && miss=1 ;;
            austin)       for v in AUSTIN_SODA_APP_TOKEN AUSTIN_DATASET_ID; do [ -z "${!v:-}" ] && echo "MISSING $v" && miss=1; done ;;
            houston_weekly) [ -z "${HOUSTON_WEEKLY_URL:-}" ] && echo "MISSING HOUSTON_WEEKLY_URL" && miss=1 ;;
            houston_sold)   [ -z "${HOUSTON_SOLD_URL:-}" ] && echo "MISSING HOUSTON_SOLD_URL" && miss=1 ;;
          esac
          exit $miss

      - name: Preflight (lightweight city check)
        shell: bash
        run: |
          set -Eeuo pipefail
          case "${{ matrix.city }}" in
            dallas)
              curl -sS --get "$DALLAS_ARCGIS_URL" \
                --data-urlencode "where=1=1" --data-urlencode "outFields=*" \
                --data-urlencode "resultRecordCount=1" --data-urlencode "f=json" | head -c 200 | tr -d '\n' && echo
              ;;
            austin)
              curl -sS -H "X-App-Token: ${AUSTIN_SODA_APP_TOKEN}" \
                "https://data.austintexas.gov/resource/${AUSTIN_DATASET_ID}.json?\$limit=1" | head -c 200 | tr -d '\n' && echo
              ;;
            houston_weekly) curl -sS -I "$HOUSTON_WEEKLY_URL" | head -n1 ;;
            houston_sold)   curl -sS -I "$HOUSTON_SOLD_URL"   | head -n1 ;;
          esac

      - name: Run ETL (Python package)
        run: |
          # The package docs show: python -m permit_leads --source <source> --days N
          # Map our matrix -> your module's source names
          case "${{ matrix.city }}" in
            dallas)          SRC="city_of_dallas" ;;
            austin)          SRC="city_of_austin" ;;
            houston_weekly)  SRC="city_of_houston_weekly" ;;
            houston_sold)    SRC="city_of_houston_sold" ;;
          esac
          python -m permit_leads --source "$SRC" --days "${LOOKBACK_DAYS}" --no-sample

      - name: Create 50 leads from last 365d of permits (RPC)
        run: |
          curl -sS "$SUPABASE_URL/rest/v1/rpc/upsert_leads_from_permits_limit" \
            -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d '{"p_limit":50,"p_days":365}' | jq .

      - name: Upload ETL artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: etl-${{ matrix.city }}-${{ github.run_id }}
          path: |
            logs/**/*
            artifacts/**/*
          if-no-files-found: warn