name: Permit Ingest
on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Source to ingest (austin, dallas, all)'
        required: true
        default: 'austin'
        type: choice
        options:
          - austin
          - dallas
          - all
      dry_run:
        description: 'Dry run mode (fetch data but do not write to database)'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "0 6 * * *"         # 06:00 UTC daily

# Prevent overlapping runs on self-hosted runners
concurrency:
  group: scrape-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: [self-hosted, linux, x64, scrape]
    steps:
      - name: Create output directories
        run: |
          mkdir -p logs artifacts
          
      - name: Self-test before ingest
        run: |
          echo "Running self-test to verify API connectivity..." | tee -a logs/etl_output.log
          response=$(curl -s -X POST "$INGEST_URL/selftest" \
            -H "Content-Type: application/json")
          echo "Self-test response: $response" | tee -a logs/etl_output.log
          
      - name: Trigger permit ingest
        run: |
          # Set defaults in bash for cron-safe execution
          source="${{ inputs.source }}"
          [ -z "$source" ] && source="austin,dallas"
          DRY_RUN="${{ inputs.dry_run }}"
          [ -z "$DRY_RUN" ] && DRY_RUN="false"
          
          dry_param=""
          if [ "$DRY_RUN" = "true" ]; then
            dry_param="&dry=1"
            echo "Running in DRY RUN mode - no database writes will occur"
          fi
          
          # If running from schedule or source is 'all', run both Austin and Dallas
          if [ "$source" = "all" ] || [ -z "$source" ]; then
            sources="austin dallas"
          else
            sources="$source"
          fi
          
          for src in $sources; do
            echo "Triggering ingest for source: $src" | tee -a logs/etl_output.log
            response=$(curl -s -X POST "$INGEST_URL?source=$src$dry_param" \
              -H "x-cron-secret: $CRON_SECRET" \
              -H "Content-Type: application/json")
            echo "Response for $src: $response" | tee -a logs/etl_output.log
            echo "---" | tee -a logs/etl_output.log
          done
          
      - name: Upload ETL logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: etl-logs-${{ github.job }}-${{ github.run_id }}
          path: |
            logs/**/*.log
            artifacts/**/*
          if-no-files-found: warn
          
    env:
      INGEST_URL: ${{ secrets.INGEST_URL }}   # e.g. https://your-app.vercel.app/api/permits/ingest
      CRON_SECRET: ${{ secrets.CRON_SECRET }}