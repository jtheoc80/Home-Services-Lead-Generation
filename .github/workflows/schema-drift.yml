name: Schema Drift Detection

on:
  schedule:
    # Run daily at 2 AM UTC (adjust timezone as needed)
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [main]
    paths:
      - 'backend/app/models.sql'
      - '.github/workflows/schema-drift.yml'

env:
  NODE_VERSION: '20'

jobs:
  detect-schema-drift:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check required secrets
        run: |
          echo "Checking required secrets for schema drift detection..."

          if [ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "❌ ERROR: NEXT_PUBLIC_SUPABASE_URL secret is missing"
            exit 1
          else
            echo "✅ NEXT_PUBLIC_SUPABASE_URL is set"
          fi

          if [ -z "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ]; then
            echo "❌ ERROR: SUPABASE_SERVICE_ROLE_KEY secret is missing"
            exit 1
          else
            echo "✅ SUPABASE_SERVICE_ROLE_KEY is set"
          fi

          echo "✅ All required secrets are present"

      - name: Run schema drift detection
        id: drift-check
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "Running schema drift detection..."
          
          # Set up output variables
          echo "drift_detected=false" >> $GITHUB_OUTPUT
          echo "pr_needed=false" >> $GITHUB_OUTPUT
          echo "error_occurred=false" >> $GITHUB_OUTPUT
          
          # Run the drift detection script
          set +e  # Don't exit on error, we want to handle exit codes
          tsx scripts/schema-drift-check.ts 2>&1 | tee schema-drift-output.log
          exit_code=$?
          set -e
          
          echo "Schema drift check exit code: $exit_code"
          
          if [ $exit_code -eq 0 ]; then
            echo "✅ No schema drift detected"
            echo "drift_detected=false" >> $GITHUB_OUTPUT
          elif [ $exit_code -eq 1 ]; then
            echo "⚠️ Schema drift detected!"
            echo "drift_detected=true" >> $GITHUB_OUTPUT
            echo "pr_needed=true" >> $GITHUB_OUTPUT
            
            # Verify migration files were created
            if [ ! -f "schema-drift-migration.sql" ]; then
              echo "❌ Migration file was not created despite drift detection"
              echo "error_occurred=true" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "❌ Schema drift check failed with exit code $exit_code"
            echo "error_occurred=true" >> $GITHUB_OUTPUT
            
            # Include error output in summary
            echo "## Error Output" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            tail -20 schema-drift-output.log >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            
            exit $exit_code
          fi

      - name: Read migration summary
        if: steps.drift-check.outputs.drift_detected == 'true'
        id: migration-summary
        run: |
          echo "Reading migration files..."
          
          # Read migration SQL and details
          if [ -f "schema-drift-migration.sql" ]; then
            echo "migration_exists=true" >> $GITHUB_OUTPUT
          else
            echo "migration_exists=false" >> $GITHUB_OUTPUT
            echo "❌ Migration file not found"
            exit 1
          fi
          
          # Create a summary for the PR description
          echo "Creating PR summary..."
          cat > pr-summary.md << 'EOF'
          # 🔍 Schema Drift Detected
          
          This automated PR was created because differences were detected between the local `backend/app/models.sql` file and the live Supabase schema.
          
          ## 📊 Drift Summary
          
          The schema drift detection workflow found differences that need to be addressed. Please review the generated migration SQL and the detailed comparison.
          
          ## 📝 Files Changed
          
          - `schema-drift-migration.sql` - Generated migration SQL to address the drift
          - `schema-drift-details.json` - Detailed comparison results
          
          ## 🚨 Important Notes
          
          1. **Review Before Applying**: Please carefully review the migration SQL before applying it to any environment
          2. **Manual Verification**: Some migrations may require manual adjustment or additional testing
          3. **Backup Recommended**: Consider backing up your database before applying migrations
          4. **Update models.sql**: After resolving the drift, ensure `backend/app/models.sql` reflects the final schema state
          
          ## 🤖 Automated Process
          
          This PR was automatically generated by the Schema Drift Detection workflow. The workflow:
          - Compares local `models.sql` with live Supabase schema using read-only service role access
          - Generates migration SQL for detected differences
          - Creates this PR for manual review and approval
          
          ## 🔄 Next Steps
          
          1. Review the migration SQL and detailed comparison
          2. Test the migration in a development environment
          3. Apply the migration to resolve the schema drift
          4. Update `backend/app/models.sql` if needed
          5. Merge this PR once the drift is resolved
          
          ---
          
          Generated at: ${{ steps.current-time.outputs.time }}
          Workflow: Schema Drift Detection
          EOF

      - name: Create Pull Request
        if: steps.drift-check.outputs.pr_needed == 'true' && steps.migration-summary.outputs.migration_exists == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🔍 Automated schema drift migration
            
            Schema drift detected between models.sql and live Supabase schema.
            This commit includes generated migration SQL and detailed comparison.
            
            Generated by: Schema Drift Detection workflow
            Timestamp: ${{ github.run_id }}
          title: "🔍 Schema Drift Detected - Migration Required"
          body-path: pr-summary.md
          branch: schema-drift/automated-migration-${{ github.run_id }}
          delete-branch: true
          add-paths: |
            schema-drift-migration.sql
            schema-drift-details.json
          labels: |
            schema-drift
            automated
            database
            migration
          assignees: |
            ${{ github.actor }}
          reviewers: |
            ${{ github.repository_owner }}

      - name: Create GitHub Issue (if PR creation fails)
        if: steps.drift-check.outputs.drift_detected == 'true' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = "🔍 Schema Drift Detected - Manual Review Required";
            const body = `
            # Schema Drift Detection Alert
            
            The automated schema drift detection workflow detected differences between the local \`backend/app/models.sql\` file and the live Supabase schema, but failed to create a pull request automatically.
            
            ## 📊 Workflow Details
            
            - **Run ID**: ${{ github.run_id }}
            - **Triggered by**: ${{ github.event_name }}
            - **Timestamp**: ${new Date().toISOString()}
            
            ## 🔄 Manual Steps Required
            
            1. Check the workflow logs for detailed error information
            2. Manually run the schema drift detection script: \`tsx scripts/schema-drift-check.ts\`
            3. Review the generated migration files
            4. Create a manual pull request with the migration
            
            ## 🔗 Workflow Run
            
            [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ## 🚨 Action Required
            
            This issue requires manual intervention to resolve the schema drift.
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['schema-drift', 'manual-review', 'database', 'urgent']
            });

      - name: Workflow Summary
        if: always()
        run: |
          echo "## 🔍 Schema Drift Detection Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.drift-check.outputs.drift_detected }}" == "true" ]; then
            echo "⚠️ **Schema drift detected!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Migration SQL generated" >> $GITHUB_STEP_SUMMARY
            echo "- Pull request created for review" >> $GITHUB_STEP_SUMMARY
            echo "- Manual review and approval required" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No schema drift detected**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Local and live schemas are in sync" >> $GITHUB_STEP_SUMMARY
            echo "- No action required" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Workflow Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY