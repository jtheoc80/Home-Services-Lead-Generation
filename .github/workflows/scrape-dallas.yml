name: Dallas County Permit Scraper

on:
  schedule:
    - cron: "15 6 * * *"  # 06:15 UTC
  workflow_dispatch:
    inputs:
      days:
        description: "Days back"
        default: "1"
      sample_data:
        description: "Sample mode"
        type: choice
        options: ["false","true"]
        default: "false"

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  SOURCE_URL: ${{ secrets.DALLAS_PERMITS_URL != '' && secrets.DALLAS_PERMITS_URL || secrets.SOURCE_URL }}

jobs:
  preflight:
    runs-on: ubuntu-latest
    outputs:
      preflight_status: ${{ steps.preflight.outputs.status }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Run preflight checks
      id: preflight
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        DALLAS_PERMITS_URL: ${{ secrets.DALLAS_PERMITS_URL }}
      run: |
        echo "🚀 Running preflight validation for Dallas County permit scraper..."
        python scripts/workflow-preflight.py
        if [ $? -eq 0 ]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "✅ Preflight checks passed"
        else
          echo "status=failed" >> $GITHUB_OUTPUT
          echo "❌ Preflight checks failed"
          exit 1
        fi

  dryrun:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    defaults:
      run:
        working-directory: permit_leads

    needs: preflight

    
    env:
      ETL_ALLOW_EMPTY: 1
      SAMPLE_DATA: 1
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SOURCE_URL: ${{ secrets.DALLAS_PERMITS_URL || secrets.SOURCE_URL }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd ..
        pipx install poetry && poetry install --no-interaction --no-ansi
        
    - name: Create directories
      run: |
        cd ..
        mkdir -p data/permits/{raw,aggregate}
        
    - name: Run Dallas County permit scraper (dry-run with sample data)
      run: |
        echo "🔧 Running dry-run with sample data and ETL_ALLOW_EMPTY=1"
        echo "Sample data mode: ${SAMPLE_DATA}"
        echo "ETL allow empty: ${ETL_ALLOW_EMPTY}"
        
        # Run with sample data for 1 day

        python -m permit_leads scrape --jurisdiction tx-dallas --days 1 --formats csv sqlite jsonl --verbose --retries 5

        SCRAPER_EXIT_CODE=$?
        if [ $SCRAPER_EXIT_CODE -ne 0 ]; then
          echo "::error::Dallas County permit scraper failed with exit code $SCRAPER_EXIT_CODE"
        fi
        # Continue regardless of scraper result
        
        # Ensure artifacts are created even when empty
        [ -f ../scripts/ensure_artifacts.py ] && python ../scripts/ensure_artifacts.py || true
        
    - name: Upload ETL artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: etl-${{ github.run_id }}
        path: |
          artifacts/**/*.csv
          logs/**/*.log
          logs/etl_output.log
        if-no-files-found: warn
        retention-days: 14
        
    - name: Generate dryrun summary
      if: always()
      run: |
        echo "## 🧪 Dallas County Permit Scraper - Dry Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Preflight Validation" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.preflight.outputs.preflight_status }}" = "success" ]; then
          echo "✅ **Preflight checks passed**: All required secrets validated and Supabase connectivity confirmed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Preflight checks failed**: Environment validation or connectivity issues detected" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🧪 Dry Run Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Dry run completed**: Sample data mode with ETL_ALLOW_EMPTY=1" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📚 Documentation" >> $GITHUB_STEP_SUMMARY
        echo "- [Workflow Secrets Configuration](docs/workflows-secrets.md)" >> $GITHUB_STEP_SUMMARY
        echo "- [Dallas County Permits Endpoint](docs/tx_permits.md)" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload logs and data artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dallas-dryrun-logs-${{ github.run_number }}
        path: |
          logs/
          data/
          artifacts/
        retention-days: 7
    
  scrape-dallas-permits:
    needs: preflight
    uses: ./.github/workflows/_scrape-python.yml
    with:
      name: tx-dallas
      module: permit_leads.dallas.scrape
      days: ${{ inputs.days || '1' }}
      sample_data: ${{ inputs.sample_data || 'false' }}
    secrets:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SOURCE_URL: ${{ secrets.DALLAS_PERMITS_URL || secrets.SOURCE_URL }}