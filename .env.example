# ===================================================================
# HOME SERVICES LEAD GENERATION - COMPREHENSIVE ENVIRONMENT VARIABLES
# ===================================================================
# This file aggregates all environment variables needed across the entire
# application stack: backend, frontend, and scraper components.
#
# Copy this file to .env and fill in your actual values.
# 
# IMPORTANT: Variables prefixed with NEXT_PUBLIC_ are exposed to the browser
# and should NOT contain sensitive information. All other variables are
# server-only and should contain sensitive keys/secrets.
# ===================================================================

# ===== SUPABASE CONFIGURATION =====
# Get these values from your Supabase project dashboard: Settings → API

# Frontend/Public Supabase Configuration (SAFE for browser exposure - these will be visible in the browser)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Backend/Server-only Supabase Configuration (SENSITIVE - server only, never expose to browser)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here
SUPABASE_JWT_SECRET=your_supabase_jwt_secret_here

# ===== DATABASE CONFIGURATION =====
# PostgreSQL database connection URL (SENSITIVE - server only)
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:password@localhost:5432/leadledger

# PostGIS Configuration (optional - for advanced spatial queries)
USE_POSTGIS=false

# ===== REDIS CONFIGURATION =====
# Choose ONE of the following Redis configurations:

# Option 1: Standard Redis URL (SENSITIVE - server only)
REDIS_URL=redis://localhost:6379/0

# Option 2: Upstash Redis REST API (SENSITIVE - server only)
# Use these if you prefer Upstash's REST API over direct Redis connection
# UPSTASH_REDIS_REST_URL=https://your-redis.upstash.io
# UPSTASH_REDIS_REST_TOKEN=your_upstash_token_here

# ===== STRIPE PAYMENT CONFIGURATION =====
# Get these from your Stripe dashboard: Developers → API keys

# Server-only Stripe Configuration (SENSITIVE - server only)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Frontend/Public Stripe Configuration (SAFE for browser exposure)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Stripe Price IDs for subscription plans (SENSITIVE - server only)
STRIPE_PRICE_STARTER_MONTHLY=price_your_starter_monthly_price_id
STRIPE_PRICE_PRO_MONTHLY=price_your_pro_monthly_price_id
STRIPE_PRICE_LEAD_CREDIT_PACK=price_your_credit_pack_price_id
STRIPE_TAX_RATE_ID=txr_your_tax_rate_id

# Billing flow URLs (update with your domain)
BILLING_SUCCESS_URL=https://your-domain.com/billing/success
BILLING_CANCEL_URL=https://your-domain.com/billing/cancel

# ===== EMAIL CONFIGURATION =====
# SendGrid API key for email notifications (SENSITIVE - server only)
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# Email configuration
EMAIL_FROM=noreply@your-domain.com
EMAIL_BRAND=LeadLedgerPro

# ===== SMS CONFIGURATION =====
# Twilio credentials for SMS notifications (SENSITIVE - server only)
# Note: Some code uses TWILIO_SID, others use TWILIO_ACCOUNT_SID - set both for compatibility
TWILIO_ACCOUNT_SID=ACyour_twilio_account_sid_here
# Use only TWILIO_ACCOUNT_SID for Twilio Account SID (standardized)
TWILIO_ACCOUNT_SID=ACyour_twilio_account_sid_here
TWILIO_AUTH_TOKEN=your_twilio_auth_token_here
TWILIO_FROM=+1234567890

# ===== APPLICATION CONFIGURATION =====
# Export control (SENSITIVE - controls data access)
ALLOW_EXPORTS=false

# Launch scope configuration (controls geographic scope)
LAUNCH_SCOPE=houston
DEFAULT_REGION=tx-houston

# Base application URL
BASE_URL=https://your-domain.com

# Registry path for jurisdiction configuration
REGISTRY_PATH=config/registry.yaml

# ===== FRONTEND CONFIGURATION =====
# These are exposed to the browser (SAFE for public exposure)

# API Configuration
NEXT_PUBLIC_API_BASE=http://localhost:8000
NEXT_PUBLIC_API_BASE_URL=/api

# Application Scope
NEXT_PUBLIC_LAUNCH_SCOPE=houston
NEXT_PUBLIC_DEFAULT_REGION=tx-houston

# Feature Flags
NEXT_PUBLIC_EXPORTS_ENABLED=false
NEXT_PUBLIC_ML_SCORING_ENABLED=false
NEXT_PUBLIC_SHOW_ADMIN_FEATURES=false
NEXT_PUBLIC_NOTIFICATIONS_ENABLED=true
NEXT_PUBLIC_REALTIME_UPDATES=true

# Feature Toggles
NEXT_PUBLIC_FEATURE_CSV_EXPORT=false
NEXT_PUBLIC_FEATURE_BULK_ACTIONS=true
NEXT_PUBLIC_FEATURE_ADVANCED_FILTERS=true
NEXT_PUBLIC_FEATURE_LEAD_SCORING=true
NEXT_PUBLIC_FEATURE_NOTIFICATIONS=true
NEXT_PUBLIC_FEATURE_ANALYTICS=true

# Geographic Configuration
NEXT_PUBLIC_DEFAULT_COUNTIES=tx-harris,tx-fort-bend,tx-brazoria,tx-galveston
NEXT_PUBLIC_SUPPORTED_REGIONS=tx-houston

# Environment Configuration
NEXT_PUBLIC_ENVIRONMENT=development
NEXT_PUBLIC_DEBUG_MODE=false

# ===== COUNTY DATA SOURCE APIS =====
# These are public APIs but may have usage limits

# Harris County Issued Permits API (PUBLIC - safe for any environment, required for permit scraping)
HC_ISSUED_PERMITS_URL=https://www.gis.hctx.net/arcgishcpid/rest/services/Permits/IssuedPermits/FeatureServer/0

# County-specific Parcel/Assessor Data URLs
HARRIS_COUNTY_PARCELS_URL=https://gis-web.hcad.org/server/rest/services/External/Properties/FeatureServer/0
MONTGOMERY_COUNTY_PARCELS_URL=https://services.arcgis.com/sample/parcels/FeatureServer/1

# Add additional counties as needed:
# FORT_BEND_COUNTY_PARCELS_URL=https://...
# GALVESTON_COUNTY_PARCELS_URL=https://...

# ===== GEOCODING CONFIGURATION =====
# Choose your geocoding provider: nominatim (free), mapbox, or google
GEOCODER=nominatim

# Mapbox Geocoding API (SENSITIVE - server only if using mapbox)
# Get free API key at https://account.mapbox.com/access-tokens/
MAPBOX_TOKEN=your_mapbox_token_here

# Google Maps Geocoding API (SENSITIVE - server only if using google)
# Get API key at https://console.cloud.google.com/apis/credentials
GOOGLE_MAPS_API_KEY=your_google_api_key_here

# ===== BACKEND CONFIGURATION =====
# Application environment and debugging
ENVIRONMENT=development
DEBUG=false
LOG_LEVEL=INFO

# API server configuration
API_HOST=0.0.0.0
API_PORT=8000
SECRET_KEY=your-secret-key-here

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Admin configuration
ADMIN_EMAILS=admin@your-domain.com

# Feature flags
ENABLE_LEAD_SCORING=true
ENABLE_DUPLICATE_DETECTION=true
ENABLE_DATA_EXPORT=true

# Notification configuration
NOTIFICATION_BATCH_SIZE=100


# Test Mode Configuration (SENSITIVE - server only)
# Set to true to bypass RLS policies for E2E testing (service-role writes)
# NOTE: Set LEADS_TEST_MODE=false after validation to ensure security
LEADS_TEST_MODE=true

# Debug API Key for trace endpoint
# Used to protect /api/leads/trace/[id] endpoint
DEBUG_API_KEY=your_debug_api_key_here

# CORS Configuration
# Comma-separated list of allowed origins for the frontend
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Redis configuration
USE_REDIS_QUEUE=false

# ===== MACHINE LEARNING CONFIGURATION =====
# Whether to use ML for lead scoring
USE_ML_SCORING=false
MIN_SCORE_THRESHOLD=70.0


# Machine learning model directory (server only)
MODEL_DIR=./backend/models

# ===== SCHEDULING CONFIGURATION =====
# Cron schedules in UTC timezone
CRON_SCRAPE_UTC=0 5 * * *
CRON_DIGEST_HOURLY=0 * * * *
CRON_DIGEST_DAILY=0 13 * * *

# ===== SCRAPER CONFIGURATION =====
# Rate limiting and retry configuration
SCRAPER_DELAY_SECONDS=1
SCRAPER_MAX_RETRIES=3
SCRAPER_TIMEOUT=30

# Data configuration
SAMPLE_DATA=0
DEFAULT_DAYS_LOOKBACK=30
MAX_RESULTS_PER_SOURCE=1000

# Output paths
DATA_OUTPUT_DIR=./data
PERMITS_DB_PATH=./data/permits/permits.db
LOG_FILE=./logs/backend.log

# ===== WEBHOOK CONFIGURATION =====
# Internal webhook authentication token (SENSITIVE - server only)
INTERNAL_WEBHOOK_TOKEN=your_internal_webhook_token_here
INTERNAL_BACKEND_WEBHOOK_URL=https://your-backend-domain.com/webhooks

# ===== SUBSCRIPTION MANAGEMENT =====
# Subscription cancellation reminders
SEND_CANCEL_REMINDER_DAYS=1

# Pricing configuration (JSON format)
CREDIT_OFFERS_JSON={"starter":{"usd":199,"credits":50},"pro":{"usd":499,"credits":150},"oneoff":{"usd":25,"credits":5}}

# ===== METRICS AND MONITORING =====
# Prometheus metrics (optional)
ENABLE_METRICS=false
METRICS_USERNAME=admin
METRICS_PASSWORD=changeme

# ===== DEVELOPMENT/TESTING =====
# Development flags
DRY_RUN=false

# NextAuth configuration (for development)
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your_nextauth_secret_here

# Testing URLs (for health checks and E2E tests)
BACKEND_URL=http://localhost:8000
FRONTEND_URL=http://localhost:3000

# ===== OPTIONAL ANALYTICS =====
# Google Analytics (optional - public)
# NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# Sentry error tracking (optional - public)
# NEXT_PUBLIC_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

