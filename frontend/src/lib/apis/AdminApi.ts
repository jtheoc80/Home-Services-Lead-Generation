/* tslint:disable */
/* eslint-disable */
/**
 * LeadLedgerPro API
 * Home Services Lead Generation API with Supabase Authentication
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface GetCancellationRecordsApiAdminCancellationsGetRequest {
    adminUserId: string;
}

/**
 * 
 */
export class AdminApi extends runtime.BaseAPI {

    /**
     * Get cancellation records for admin review.
     * Get Cancellation Records
     */
    async getCancellationRecordsApiAdminCancellationsGetRaw(requestParameters: GetCancellationRecordsApiAdminCancellationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['adminUserId'] == null) {
            throw new runtime.RequiredError(
                'adminUserId',
                'Required parameter "adminUserId" was null or undefined when calling getCancellationRecordsApiAdminCancellationsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['adminUserId'] != null) {
            queryParameters['admin_user_id'] = requestParameters['adminUserId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/admin/cancellations`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Get cancellation records for admin review.
     * Get Cancellation Records
     */
    async getCancellationRecordsApiAdminCancellationsGet(requestParameters: GetCancellationRecordsApiAdminCancellationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getCancellationRecordsApiAdminCancellationsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
