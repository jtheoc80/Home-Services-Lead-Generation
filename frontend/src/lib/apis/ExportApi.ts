/* tslint:disable */
/* eslint-disable */
/**
 * LeadLedgerPro API
 * Home Services Lead Generation API with Supabase Authentication
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExportDataRequest,
  HTTPValidationError,
} from '../models/index';
import {
    ExportDataRequestFromJSON,
    ExportDataRequestToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface ExportDataApiExportDataPostRequest {
    exportDataRequest: ExportDataRequest;
}

/**
 * 
 */
export class ExportApi extends runtime.BaseAPI {

    /**
     * Export data with ALLOW_EXPORTS enforcement and admin override capability.
     * Export Data
     */
    async exportDataApiExportDataPostRaw(requestParameters: ExportDataApiExportDataPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['exportDataRequest'] == null) {
            throw new runtime.RequiredError(
                'exportDataRequest',
                'Required parameter "exportDataRequest" was null or undefined when calling exportDataApiExportDataPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/export/data`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ExportDataRequestToJSON(requestParameters['exportDataRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Export data with ALLOW_EXPORTS enforcement and admin override capability.
     * Export Data
     */
    async exportDataApiExportDataPost(requestParameters: ExportDataApiExportDataPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.exportDataApiExportDataPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get export configuration status for the current user.
     * Get Export Status
     */
    async getExportStatusApiExportStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/export/status`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Get export configuration status for the current user.
     * Get Export Status
     */
    async getExportStatusApiExportStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getExportStatusApiExportStatusGetRaw(initOverrides);
        return await response.value();
    }

}
